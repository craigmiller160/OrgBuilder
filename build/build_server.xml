<?xml version="1.0" encoding="UTF-8"?>
<project name="OrgBuilder-Server">
    <property file="build.properties" />
    <property file="${server.privateProps}" />
    <path id="server.libs">
        <fileset dir="${dir.lib}" includes="**/*.jar" />
        <fileset dir="${dir.server.lib}" includes="**/*.jar" />
    </path>
    <path id="test.compile">
        <path refid="server.libs" />
        <pathelement location="${dir.server.build.staging}" />
    </path>
    <target name="resolve">
        <ant antfile="${dir.server}/ivy_build.xml" dir="${dir.server}" target="resolve" />
    </target>
    <target name="clean">
        <delete dir="${dir.server.build}"/>
    </target>
    <target name="prepare" depends="clean">
        <mkdir dir="${dir.server.build.staging}" />
        <mkdir dir="${dir.server.build.artifact}" />
        <mkdir dir="${dir.server.build.test}" />
        <mkdir dir="${dir.server.build.testReport}" />
        <copy todir="${dir.server.build.staging}">
            <fileset dir="${dir.server.resources}" includes="**/*" />
        </copy>
    </target>
    <target name="compile" depends="prepare">
        <antcall target="resolve" />
        <javac destdir="${dir.server.build.staging}"
               source="1.8" target="1.8"
               classpathref="server.libs" >
            <src path="${dir.server.src}" />
        </javac>
        <javac destdir="${dir.server.build.test}"
               source="1.8" target="1.8"
               classpathref="test.compile">
            <src path="${dir.server.test}" />
        </javac>
        <property name="server.props.path" value="${build.server.props.path}" />
        <antcall target="replace" />
    </target>
    <target name="intellij.replace">
        <property name="server.props.path" value="${intellij.server.props.path}" />
        <antcall target="replace" />
    </target>
    <target name="replace">
        <replace file="${server.props.path}" token="$databasePassword" value="${dbPass}"/>
        <replace file="${server.props.path}" token="$keystorePassword" value="${keyStorePass}"/>
        <replace file="${server.props.path}" token="$tokenPassword" value="${tokenPass}" />
        <replace file="${server.props.path}" token="$dataPassword" value="${dataPass}" />
        <replace file="${server.props.path}" token="$caCertPassword" value="${caCertPass}" />
        <replace file="${server.props.path}" token="$truststorePassword" value="${trustStorePass}" />
    </target>
    <target name="test" depends="compile">
        <junit fork="yes" haltonfailure="yes" printsummary="yes">
            <classpath>
                <path refid="test.compile" />
                <pathelement location="${dir.server.build.test}" />
            </classpath>
            <batchtest todir="${dir.server.build.testReport}">
                <fileset dir="${dir.server.build.test}">
                    <include name="**/*.class" />
                </fileset>
                <formatter type="xml" />
            </batchtest>
        </junit>
    </target>
    <target name="package" depends="test">
        <war destfile="${dir.server.build.artifact}/${ant.project.name}-${server.project.version}.war"
             webxml="${dir.server.web}/WEB-INF/web.xml">
            <classes dir="${dir.server.build.staging}" />
            <lib dir="${dir.server.lib}" />
            <manifest>
                <attribute name="Project-Name" value="${ant.project.name}" />
                <attribute name="Version" value="${server.project.version}" />
                <attribute name="Created-By" value="Craig Miller" />
            </manifest>
        </war>
    </target>
</project>